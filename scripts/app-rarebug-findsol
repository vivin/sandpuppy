#!/bin/bash

if [[ $# -lt 3 ]]; then
  echo "$0 <experiment> <run-name> <target>"
fi

EXPERIMENT=$1
RUN_NAME=$2
TARGET=$3

function format_seconds {
  local formatted=""

  local T=$1
  local D=$((T/60/60/24))
  local H=$((T/60/60%24))
  local M=$((T/60%60))
  local S=$((T%60))
  (( $D > 0 )) && formatted="$D days "
  (( $H > 0 )) && formatted="$formatted$H hours "
  (( $M > 0 )) && formatted="$formatted$M minutes"
  (( $D > 0 || $H > 0 || $M > 0 )) && formatted="$formatted and "
  formatted="$formatted$S seconds"

  echo "$formatted"
}

echo "Finding solutions for rarebug"
echo "Identifying rarebug targets in experiment $EXPERIMENT and run $RUN_NAME ..."

declare -a solutions=()
INPUTS_DIR="$SUBJECT_DIR/results/$RUN_NAME/$TARGET/queue";
CRASHES_DIR="$SUBJECT_DIR/results/$RUN_NAME/$TARGET/crashes";

fuzz_start_time=$(stat -c '%Y' "$INPUTS_DIR/id:000000,orig:first.txt")
j=0
num_inputs=$(find "$CRASHES_DIR" -maxdepth 1 -type f -name "id:*" | wc -l)
while IFS= read -r -d '' input_file_path
do
  j=$(( j + 1 ))
  echo -ne "Checking input file $j of $num_inputs\r";

  # shellcheck disable=SC2001
  filename=$(echo "$input_file_path" | sed -e 's,^.*/,,')
  mtime=$(stat -c '%Y' "$input_file_path")
  diff=$((mtime - fuzz_start_time))
  pretty_diff=$(format_seconds $diff)

  out=$(env ASAN_OPTIONS="abort_on_error=1:detect_leaks=0:symbolize=1:exitcode=86:allocator_may_return_null=1" timeout 1 "resources/rarebug-asan" < "$input_file_path" 2>&1)

  heap_buffer_overflow=$(echo "$out" | grep "heap-buffer-overflow")
  expected_func_and_line=$(echo "$out" | grep -e "in process_message.*rarebug.c:52:9")
  if [[ -n "$heap_buffer_overflow" ]] && [[ -n "$expected_func_and_line" ]]; then
    solutions+=("$filename (found after $pretty_diff of fuzzing)")
  fi
done < <(find "$CRASHES_DIR" -maxdepth 1 -type f -name "id:*" -print0 | sort -z)

if [[ "${#solutions[@]}" -gt 0 ]]; then
  for solution in "${solutions[@]}"; do
    echo "  $solution"
  done

  echo ""
fi
