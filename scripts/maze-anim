#!/bin/bash

if [[ $# -lt 2 ]]; then
  echo "$0 <experiment> <subject> [<file-regex>]"
fi

EXPERIMENT=$1
SUBJECT=$2
if [ "$SUBJECT" == "maze" ]; then
  maze_type=1
elif [ "$SUBJECT" == "maze_ijon" ]; then
  maze_type=2
elif [ "$SUBJECT" == "maze_klee" ]; then
  maze_type=3
else
  echo "Unknown maze: $SUBJECT"
  exit 1
fi

FILE_REGEX=$3
if [[ -z "$FILE_REGEX" ]]; then
  FILE_REGEX=".*id:.*";
fi

declare -a targets=()
declare -A target_to_pod_name=()
declare -A target_to_id=()

echo "Animating maze \"$SUBJECT\""
echo "Identifying $SUBJECT targets in experiment $EXPERIMENT..."

SUBJECT_DIR="/mnt/vivin-nfs/vivin/$EXPERIMENT/$SUBJECT"
id_to_pod_name_and_target_file="$SUBJECT_DIR/results/id_to_pod_name_and_target.yml"
while IFS= read -r -d '' target_script
do
  # shellcheck disable=SC2001
  id=$(echo "$target_script" | sed -e 's,^.*/,,')
  pod_name_and_target=$(grep -A2 "^$id" "$id_to_pod_name_and_target_file" | tail -2)
  pod_name=$(echo "$pod_name_and_target" | head -1 | sed -e 's/^.*pod_name: //')
  target_name=$(echo "$pod_name_and_target" | tail -1 | sed -e 's/^.*target_name: //')

  targets+=("$target_name")
  target_to_pod_name[$target_name]="$pod_name"
  target_to_id[$target_name]="$id"
done < <(find "$SUBJECT_DIR" -maxdepth 1 -type f -print0 | sort -z)

echo ""
for i in "${!targets[@]}"; do
  target=${targets[$i]}

  option=$(( i + 1 ))
  echo "$option) $target"
done

echo ""
echo "Choose a $SUBJECT target whose inputs you want to animate:"
read -r selected_option
if ! [[ "$selected_option" =~ ^[0-9]+$ ]] || [[ $selected_option -eq 0 ]] || [[ $selected_option -gt $option ]]; then
  echo "Invalid option"
fi

selected_target=${targets[$(( selected_option - 1 ))]}
selected_pod_name=${target_to_pod_name[$selected_target]}
selected_id=${target_to_id[$selected_target]}

declare -a solutions=()
INPUTS_DIR="$SUBJECT_DIR/results/sandpuppy-sync/$selected_id/queue";
while IFS= read -r -d '' input_file_path
do
  # shellcheck disable=SC2001
  filename=$(echo "$input_file_path" | sed -e 's,^.*/,,')
  resources/maze-anim "$selected_target" "$selected_pod_name" "$filename" "$maze_type" < "$input_file_path"
  resources/maze-anim "$selected_target" "$selected_pod_name" "$filename" "$maze_type" < "$input_file_path" > /tmp/out
  found_treasure=$(grep "You found the treasure" /tmp/out)
  if [[ -n "$found_treasure" ]]; then
    solutions+=("$filename (full path: $input_file_path)")
  fi
done < <(find "$INPUTS_DIR" -maxdepth 1 -type f -regextype posix-extended -regex "$FILE_REGEX" -print0 | sort -z)

if [[ "${#solutions[@]}" -gt 0 ]]; then
  echo "The following inputs generated by target $selected_target are solutions for the maze \"$SUBJECT\":"
  echo ""
  for solution in "${solutions[@]}"; do
    echo "  $solution"
  done
fi
